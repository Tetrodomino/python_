# 예외 처리
"""
기본 구조
──────────────────────────────────────────────────
try:
    실행문구
except [발생오류 [as 오류변수]]:
    오류 발생 시 실행문구
──────────────────────────────────────────────────
try에서 오류가 발생할 경우 except가 실행


[ ] 안에 있는 발생오류 등은 생략 가능
──────────────────────────────────────────────────
try:
    ...
except:
    ...
──────────────────────────────────────────────────
이렇게 하면 오류에 상관 없이 except 부분이 실행


──────────────────────────────────────────────────
try:
    ...
except 발생오류:
    ...
──────────────────────────────────────────────────
적어둔 오류 종류와 동일한 오류일 때만 except 부분 실행


──────────────────────────────────────────────────
try:
    ...
except 발생오류 as 오류변수:
    ...
──────────────────────────────────────────────────
발생한 오류의 내용까지 알고 싶을 때 사용
"""

try:
    4 / 0
except ZeroDivisionError as e:
    print(e) # division by zero



# try-finally
# try에서 예외가 발생하더라도 실행되는 부분. 보통 참조한 파일을 닫아야하거나 할 때 사용

try:
    f = open('새파일.txt', 'w')
except:
    print('에러 발생')
finally:
    f.close()


# try-else
# try에서 오류가 발생하지 않아야 실행
    
try:
    a = 0
except:
    print('에러 발생')
else:
    print('에러 미발생')